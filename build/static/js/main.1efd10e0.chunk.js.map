{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","booksList","setbooksList","bookTitle","setbookTitle","isLoading","setisLoading","errMsg","seterrMsg","sortMostRecent","a","sort","b","hasOwnProperty","Date","publish_date","sortAlphabatic","title","localeCompare","searchBytitle","fetch","then","response","json","data","docs","catch","err","className","type","value","onChange","e","target","onClick","map","s","i","class","src","isbn","alt","author_name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAsIeA,MApIf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAGqBF,mBAAS,IAH9B,mBAGNG,EAHM,KAGKC,EAHL,OAKqBJ,oBAAS,GAL9B,mBAKNK,EALM,KAKKC,EALL,OAMeN,mBAAS,IANxB,mBAMNO,EANM,KAMEC,EANF,KAQPC,EAAc,uCAAG,sBAAAC,EAAA,sDACrBT,EAAUU,MAAK,SAAUD,EAAGE,GAC1B,GAAIF,EAAEG,eAAe,iBAAmBD,EAAEC,eAAe,gBACvD,OAAO,IAAIC,KAAKF,EAAEG,aAAa,IAAM,IAAID,KAAKJ,EAAEK,aAAa,OAGjEb,GAAa,SAACD,GAAD,mBAAmBA,MANX,2CAAH,qDAQde,EAAc,uCAAG,sBAAAN,EAAA,sDACrBT,EAAUU,MAAK,SAAUD,EAAGE,GAC1B,OAAOF,EAAEO,MAAMC,cAAcN,EAAEK,UAGjCf,GAAa,SAACD,GAAD,mBAAmBA,MALX,2CAAH,qDAOdkB,EAAa,uCAAG,sBAAAT,EAAA,sDACpBJ,GAAa,GACbc,MAAM,4CAAD,OAA6CjB,IAC/CkB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLpB,EAAa,IACbF,EAAasB,EAAKC,MAClBnB,GAAa,MAEdoB,OAAM,SAACC,GACNnB,EAAUmB,MAVM,2CAAH,qDA4BnB,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAOA,UAAU,WAAjB,0BACA,uBACEA,UAAU,YACVC,KAAK,OACLC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAa4B,EAAEC,OAAOH,UAGzC,wBAAQF,UAAU,aAAaM,QAASf,EAAxC,oBAIA,uBACc,GAAbd,EACC,mCACE,6BACE,qEAIJ,qCACgB,IAAbJ,GACC,qCACE,wBAAQ2B,UAAU,aAAaM,QAASlB,EAAxC,+BAGA,wBAAQY,UAAU,aAAaM,QAASzB,EAAxC,iCAKJ,sBAAKmB,UAAU,kBAAf,UACG3B,EAAUkC,KAAI,SAACC,EAAGC,GAAJ,OACb,qCACE,sBAAKC,MAAM,OAAX,UAC+B,GAA5BF,EAAEvB,eAAe,QAChB,qBACE0B,IACE,wCACAH,EAAEI,KAAK,GACP,SAEFC,IAAI,SACJb,UAAU,YAEV,KAEJ,sBAAKU,MAAM,YAAX,UACE,6BACE,4BAAIF,EAAEnB,UAER,qBAAKqB,MAAM,OAAX,SACuC,GAApCF,EAAEvB,eAAe,gBAChB,mCAAGuB,EAAErB,aAAa,KAChB,OAEN,8BACGqB,EAAEM,YACiC,GAAnCN,EAAEvB,eAAe,eAChB,mCAAGuB,EAAEM,YAAY,KACf,cAGH,UAIVnC,GACC,mCACE,6BAAKA,gBChHNoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1efd10e0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './Test.css';\nfunction App() {\n  const [booksList, setbooksList] = useState([]);\n\n  const [bookTitle, setbookTitle] = useState('');\n\n  const [isLoading, setisLoading] = useState(false);\n  const [errMsg, seterrMsg] = useState('');\n\n  const sortMostRecent = async () => {\n    booksList.sort(function (a, b) {\n      if (a.hasOwnProperty('publish_date') && b.hasOwnProperty('publish_date'))\n        return new Date(b.publish_date[0]) - new Date(a.publish_date[0]);\n    });\n\n    setbooksList((booksList) => [...booksList]);\n  };\n  const sortAlphabatic = async () => {\n    booksList.sort(function (a, b) {\n      return a.title.localeCompare(b.title);\n    });\n\n    setbooksList((booksList) => [...booksList]);\n  };\n  const searchBytitle = async () => {\n    setisLoading(true);\n    fetch(`http://openlibrary.org/search.json?title=${bookTitle}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setbookTitle('');\n        setbooksList(data.docs);\n        setisLoading(false);\n      })\n      .catch((err) => {\n        seterrMsg(err);\n      });\n  };\n\n  function checkImage(imageSrc) {\n    var image = new Image();\n    image.src = imageSrc;\n    image.onload = function () {\n      if (this.width > 0) {\n        console.log('image exists');\n        return imageSrc;\n      }\n    };\n    image.onerror = function () {\n      console.log(\"image doesn't exist\");\n    };\n  }\n\n  return (\n    <div className='App'>\n      <label className='bookname'> Book Title:</label>\n      <input\n        className='bookinput'\n        type='text'\n        value={bookTitle}\n        onChange={(e) => setbookTitle(e.target.value)}\n      />\n\n      <button className='btn-search' onClick={searchBytitle}>\n        Search\n      </button>\n\n      <br />\n      {isLoading == true ? (\n        <>\n          <h4>\n            <b> Loading Please Wait............</b>\n          </h4>\n        </>\n      ) : (\n        <>\n          {booksList != '' && (\n            <>\n              <button className='btn-search' onClick={sortAlphabatic}>\n                Sort Alphabetical\n              </button>\n              <button className='btn-search' onClick={sortMostRecent}>\n                Sort Most Recent\n              </button>\n            </>\n          )}\n          <div className='searchcontainer'>\n            {booksList.map((s, i) => (\n              <>\n                <div class='card'>\n                  {s.hasOwnProperty('isbn') == true ? (\n                    <img\n                      src={\n                        'http://covers.openlibrary.org/b/isbn/' +\n                        s.isbn[0] +\n                        '-L.jpg'\n                      }\n                      alt='Avatar'\n                      className='imgavat'\n                    />\n                  ) : null}\n\n                  <div class='container'>\n                    <h4>\n                      <b>{s.title}</b>\n                    </h4>\n                    <div class='date'>\n                      {s.hasOwnProperty('publish_date') == true ? (\n                        <>{s.publish_date[0]}</>\n                      ) : null}\n                    </div>\n                    <p>\n                      {s.author_name}\n                      {s.hasOwnProperty('author_name') == true ? (\n                        <>{s.author_name[0]}</>\n                      ) : null}\n                    </p>\n                  </div>\n                </div>{' '}\n              </>\n            ))}\n\n            {errMsg && (\n              <>\n                <h3>{errMsg}</h3>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}